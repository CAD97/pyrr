[workspace]
resolver = "2"
members = ["crates/*", "demo/*"]


[workspace.package]
version = "0.0.0"
rust-version = "1.75.0"


[workspace.dependencies]
pyrr-core = { path = "pyrr/core" }
pyrr-math = { path = "pyrr/math" }
pyrr-stdx = { path = "pyrr/stdx" }


[workspace.dependencies.ahash]
version = "0.8.6"
default-features = false
features = ["runtime-rng", "std"]

[workspace.dependencies.bytemuck]
version = "1.14.0"
default-features = false
features = ["derive", "align_offset", "min_const_generics"]

[workspace.dependencies.crevice]
version = "0.14.0"
default-features = false
features = ["std", "nalgebra"]

[workspace.dependencies.glm]
package = "nalgebra-glm"
version = "0.18.0"
default-features = false
features = ["std"]

[workspace.dependencies.hashbrown]
version = "0.14.3"
default-features = false
features = ["ahash", "equivalent"]

[workspace.dependencies.indexmap]
version = "2.1.0"
default-features = false
features = ["std"]

[workspace.dependencies.libm]
version = "0.2.8"
default-features = false
features = []

[workspace.dependencies.mint]
version = "0.5.9"
default-features = false
features = []

[workspace.dependencies.na]
package = "nalgebra"
version = "0.32.3"
default-features = false
features = ["std", "libm-force"]

[workspace.dependencies.paste]
version = "1.0.14"
default-features = false
features = []

[workspace.dependencies.rand]
version = "0.8.5"
default-features = false
features = ["std", "min_const_gen"]

[workspace.dependencies.rapier2d]
version = "0.17.2"
default-features = false
features = ["dim2", "f32", "enhanced-determinism"]

[workspace.dependencies.simba]
version = "0.8.1"
default-features = false
features = ["std", "libm_force"]

[workspace.dependencies.wasmtime]
version = "16.0.0"
default-features = false
features = [
    "addr2line",
    "coredump",
    "cache",
    "cranelift",
    "component-model",
    "debug-builtins",
    "demangle",
    "parallel-compilation",
    "pooling-allocator",
]

[workspace.dependencies.wit-bindgen]
version = "0.16.0"
default-features = false
features = ["macros"]

[workspace.dependencies.wyhash]
version = "0.5.0"
default-features = false
features = []


[patch.crates-io]
nalgebra = { git = "https://github.com/CAD97/nalgebra", branch = "patch-3" }     # dimforge/nalgebra#1349
nalgebra-glm = { git = "https://github.com/CAD97/nalgebra", branch = "patch-3" } # dimforge/nalgebra#1349


[profile.dev]
opt-level = 1

[profile.dev.package."*"]
# opt-level = 2 # disables monomorphization sharing

[profile.release]
opt-level = 3
lto = "fat"

[profile.wasm-component]
inherits = "release"
strip = "debuginfo"
panic = "abort"


[workspace.lints.rust]
unsafe_code = "deny"
# rust_2018_idioms
elided_lifetimes_in_paths = "warn"
explicit_outlives_requirements = "warn"
unused_extern_crates = "warn"
[workspace.lints.clippy]
# clippy::cargo
multiple_crate_versions = "warn"
negative_feature_names = "warn"
redundant_feature_names = "warn"
wildcard_dependencies = "warn"
# clippy::nursery
empty_line_after_doc_comments = "warn"
empty_line_after_outer_attr = "warn"
imprecise_flops = "warn"
iter_with_drain = "warn"
manual_clamp = "warn"
nonstandard_macro_braces = "warn"
significant_drop_in_scrutinee = "warn"
significant_drop_tightening = "warn"
suboptimal_flops = "warn"
suspicious_operation_groupings = "warn"
useless_let_if_seq = "warn"
# clippy::pedantic
borrow_as_ptr = "warn"
case_sensitive_file_extension_comparisons = "warn"
cast_lossless = "warn"
cast_possible_truncation = "warn"
cast_possible_wrap = "warn"
cast_precision_loss = "warn"
cast_sign_loss = "warn"
checked_conversions = "warn"
copy_iterator = "warn"
doc_link_with_quotes = "warn"
ignored_unit_patterns = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
macro_use_imports = "warn"
manual_instant_elapsed = "warn"
manual_let_else = "warn"
manual_ok_or = "warn"
manual_string_new = "warn"
map_unwrap_or = "warn"
needless_continue = "warn"
no_mangle_with_rust_abi = "warn"
option_option = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
range_minus_one = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
ref_option_ref = "warn"
same_functions_in_if_condition = "warn"
semicolon_if_nothing_returned = "warn"
should_panic_without_expect = "warn"
struct_excessive_bools = "warn"
too_many_lines = "warn"
transmute_ptr_to_ptr = "warn"
trivially_copy_pass_by_ref = "warn"
unicode_not_nfc = "warn"
unreadable_literal = "warn"
unsafe_derive_deserialize = "warn"
verbose_bit_mask = "warn"
wildcard_imports = "warn"
zero_sized_map_values = "warn"
# clippy::restriction
as_underscore = "warn"
empty_drop = "warn"
exit = "warn"
expect_used = "warn"
lossy_float_literal = "warn"
print_stdout = "warn"
print_stderr = "warn"
rest_pat_in_fully_bound_structs = "warn"
suspicious_xor_used_as_pow = "warn"
todo = "warn"
undocumented_unsafe_blocks = "warn"
unimplemented = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unneeded_field_pattern = "warn"
unseparated_literal_suffix = "warn"
# clippy::style
assertions_on_constants = "allow" # rust-lang/rust-clippy#8159
